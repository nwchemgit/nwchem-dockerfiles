name: nwchem_docker_qc

on:
  repository_dispatch:
    types: [backend_automation]
  workflow_dispatch:

jobs:
  docker_schedule:
    if: (github.event_name == 'workflow_dispatch') || (github.event_name == 'schedule')
    strategy:
        fail-fast: false
        matrix:
          folder:
            - nwchem-dev.qc
          archs: [linux/amd64]
    runs-on: ubuntu-18.04
    timeout-minutes: 420
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Qemu
        id: qemu
        uses: docker/setup-qemu-action@v2
        with:
          image: crazymax/binfmt:v6.0.0
      - name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        if: ${{ github.actor == github.repository_owner }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Arch
        id: get-arch
        run: |
          echo "::set-output name=arch::$(echo ${{matrix.archs }} | sed 's/linux//'|sed  's/\///g' )"
        shell: bash
      - name: build_schedule
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.actor == github.repository_owner }}
          context: ${{ matrix.folder }}
          platforms: ${{ matrix.archs }}
          tags: ghcr.io/${{ github.actor }}/${{ matrix.folder }}/${{ steps.get-arch.outputs.arch }}:latest
      - name: load and test image
        if:  ( github.actor == github.repository_owner )
        run: |
          sleep 30s
          docker pull ghcr.io/${{ github.actor }}/${{ matrix.folder }}/${{ steps.get-arch.outputs.arch }}
          cd /tmp
          umask u=rwx,g=rwx,o=rwx
          umask -S
          svn export https://github.com/nwchemgit/nwchem/trunk/QA >& svnout.log
          cd QA
          docker run --rm  \
          -e NWCHEM_EXECUTABLE=/opt/nwchem/bin/nwchem --entrypoint='/opt/nwchem/QA/runtests.mpi.unix' \
          -v `pwd`:/opt/nwchem/QA ghcr.io/${{ github.actor }}/${{ matrix.folder }}/${{ steps.get-arch.outputs.arch }} \
          procs 2 h2o_opt prop_mep_gcube 
